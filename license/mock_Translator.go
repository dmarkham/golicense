// Code generated by mockery v1.0.0. DO NOT EDIT.

package license

import context "context"
import mock "github.com/stretchr/testify/mock"
import module "github.com/mitchellh/golicense/module"

// MockTranslator is an autogenerated mock type for the Translator type
type MockTranslator struct {
	mock.Mock
}

// Translate provides a mock function with given fields: _a0, _a1
func (_m *MockTranslator) Translate(_a0 context.Context, _a1 module.Module) (module.Module, bool) {
	ret := _m.Called(_a0, _a1)

	var r0 module.Module
	if rf, ok := ret.Get(0).(func(context.Context, module.Module) module.Module); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(module.Module)
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(context.Context, module.Module) bool); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Get(1).(bool)
	}

	return r0, r1
}
